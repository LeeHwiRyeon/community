name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install backend dependencies
      run: |
        cd server-backend
        npm ci

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Install Playwright browsers
      run: |
        cd server-backend
        npx playwright install --with-deps

    - name: Run backend unit tests
      run: |
        cd server-backend
        npm run test:unit

    - name: Run backend API tests
      run: |
        cd server-backend
        npm run test:strict

    - name: Run backend security tests
      run: |
        cd server-backend
        npm run test:security

    - name: Start mock backend
      run: |
        cd server-backend
        npm run mock &
        sleep 5

    - name: Run E2E tests
      run: |
        cd server-backend
        npm run test:e2e -- --project=chromium

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          server-backend/test-results/
          server-backend/playwright-report/
          frontend/test-results/

  frontend-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Run frontend unit tests
      run: |
        cd frontend
        npm run test:run

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/dist/

  deploy:
    needs: [test, frontend-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to staging
      run: |
        echo "Deploy to staging environment"
        # Add your deployment commands here