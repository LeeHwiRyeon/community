name: 자동 개발 워크플로우

on:
  schedule:
    # 매일 오전 9시에 TODO 생성
    - cron: '0 9 * * *'
    # 매 6시간마다 진행 추적
    - cron: '0 */6 * * *'
    # 매주 월요일 오전 10시에 작업 할당
    - cron: '0 10 * * 1'
  workflow_dispatch:
    inputs:
      action:
        description: '실행할 작업'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - generate-todos
          - assign-tasks
          - track-progress

jobs:
  generate-todos:
    if: github.event_name == 'schedule' || github.event.inputs.action == 'all' || github.event.inputs.action == 'generate-todos'
    runs-on: ubuntu-latest
    steps:
      - name: 체크아웃
        uses: actions/checkout@v4
      
      - name: Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 의존성 설치
        run: |
          npm ci
          cd frontend && npm ci
          cd ../server-backend && npm ci
      
      - name: 자동 TODO 생성
        run: |
          node scripts/auto-todo-generator.js
      
      - name: 변경사항 커밋
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/todo-backlog.md
          if git diff --staged --quiet; then
            echo "변경사항이 없습니다."
          else
            git commit -m "🤖 자동 TODO 생성 $(date '+%Y-%m-%d %H:%M')"
            git push
          fi

  assign-tasks:
    if: github.event_name == 'schedule' || github.event.inputs.action == 'all' || github.event.inputs.action == 'assign-tasks'
    runs-on: ubuntu-latest
    steps:
      - name: 체크아웃
        uses: actions/checkout@v4
      
      - name: Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 의존성 설치
        run: npm ci
      
      - name: 자동 작업 할당
        run: |
          node scripts/auto-task-assigner.js
      
      - name: 알림 디렉토리 생성
        run: mkdir -p notifications
      
      - name: 변경사항 커밋
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/todo-backlog.md notifications/
          if git diff --staged --quiet; then
            echo "변경사항이 없습니다."
          else
            git commit -m "🎯 자동 작업 할당 $(date '+%Y-%m-%d %H:%M')"
            git push
          fi

  track-progress:
    if: github.event_name == 'schedule' || github.event.inputs.action == 'all' || github.event.inputs.action == 'track-progress'
    runs-on: ubuntu-latest
    steps:
      - name: 체크아웃
        uses: actions/checkout@v4
      
      - name: Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 의존성 설치
        run: npm ci
      
      - name: 테스트 실행
        run: |
          cd frontend && npm test -- --coverage --watchAll=false
          cd ../server-backend && npm test -- --coverage --watchAll=false
      
      - name: 자동 진행 추적
        run: |
          node scripts/auto-progress-tracker.js
      
      - name: 변경사항 커밋
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/progress-report.md docs/todo-backlog.md
          if git diff --staged --quiet; then
            echo "변경사항이 없습니다."
          else
            git commit -m "📊 진행 추적 업데이트 $(date '+%Y-%m-%d %H:%M')"
            git push
          fi

  notify-team:
    if: always()
    runs-on: ubuntu-latest
    needs: [generate-todos, assign-tasks, track-progress]
    steps:
      - name: 체크아웃
        uses: actions/checkout@v4
      
      - name: 팀 알림
        run: |
          echo "🚀 자동 개발 워크플로우가 완료되었습니다."
          echo "📋 TODO 생성: ${{ needs.generate-todos.result }}"
          echo "🎯 작업 할당: ${{ needs.assign-tasks.result }}"
          echo "📊 진행 추적: ${{ needs.track-progress.result }}"
      
      - name: Slack 알림 (선택사항)
        if: env.SLACK_WEBHOOK_URL
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"🚀 자동 개발 워크플로우 완료!\n📋 TODO 생성: ${{ needs.generate-todos.result }}\n🎯 작업 할당: ${{ needs.assign-tasks.result }}\n📊 진행 추적: ${{ needs.track-progress.result }}"}' \
            $SLACK_WEBHOOK_URL
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
