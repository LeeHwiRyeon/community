apiVersion: v1
kind: ConfigMap
metadata:
  name: community-config
  namespace: community-platform
  labels:
    app.kubernetes.io/name: community-platform
    app.kubernetes.io/component: config
data:
  # 데이터베이스 설정
  POSTGRES_HOST: "postgres-service"
  POSTGRES_PORT: "5432"
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "password"
  
  MONGODB_HOST: "mongo-service"
  MONGODB_PORT: "27017"
  MONGODB_USER: "admin"
  MONGODB_PASSWORD: "password"
  
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_PASSWORD: "password"
  
  ELASTICSEARCH_HOST: "elasticsearch-service"
  ELASTICSEARCH_PORT: "9200"
  
  CLICKHOUSE_HOST: "clickhouse-service"
  CLICKHOUSE_PORT: "8123"
  
  MINIO_ENDPOINT: "minio-service:9000"
  MINIO_ACCESS_KEY: "minioadmin"
  MINIO_SECRET_KEY: "minioadmin"
  
  KAFKA_BROKERS: "kafka-service:9092"
  
  # 서비스 URL
  AUTH_SERVICE_URL: "http://auth-service:3001"
  USER_SERVICE_URL: "http://user-service:3002"
  CONTENT_SERVICE_URL: "http://content-service:3003"
  NOTIFICATION_SERVICE_URL: "http://notification-service:3004"
  ANALYTICS_SERVICE_URL: "http://analytics-service:3005"
  SEARCH_SERVICE_URL: "http://search-service:3006"
  FILE_SERVICE_URL: "http://file-service:3007"
  CHAT_SERVICE_URL: "http://chat-service:3008"
  ADMIN_SERVICE_URL: "http://admin-service:3009"
  
  # API Gateway
  API_GATEWAY_URL: "http://api-gateway:8000"
  
  # JWT 설정
  JWT_SECRET: "your-super-secret-jwt-key-change-in-production"
  JWT_EXPIRES_IN: "24h"
  
  # CORS 설정
  CORS_ORIGIN: "http://localhost:3000,https://community.example.com"
  
  # 로깅 설정
  LOG_LEVEL: "info"
  LOG_FORMAT: "json"
  
  # 모니터링 설정
  PROMETHEUS_ENDPOINT: "http://prometheus-service:9090"
  JAEGER_ENDPOINT: "http://jaeger-service:14268"
  
  # 이메일 설정
  SMTP_HOST: "smtp.gmail.com"
  SMTP_PORT: "587"
  SMTP_USER: "your-email@gmail.com"
  SMTP_PASS: "your-app-password"
  
  # 외부 서비스
  SLACK_WEBHOOK: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
  DISCORD_WEBHOOK: "https://discord.com/api/webhooks/YOUR/DISCORD/WEBHOOK"
  
  # 환경 설정
  NODE_ENV: "production"
  PORT: "3000"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kong-config
  namespace: community-platform
  labels:
    app.kubernetes.io/name: community-platform
    app.kubernetes.io/component: api-gateway
data:
  kong.yml: |
    _format_version: "3.0"
    
    services:
      - name: auth-service
        url: http://auth-service:3001
        routes:
          - name: auth-routes
            paths:
              - /api/auth
            methods:
              - GET
              - POST
              - PUT
              - DELETE
            strip_path: true
        plugins:
          - name: rate-limiting
            config:
              minute: 100
              hour: 1000
          - name: cors
            config:
              origins:
                - "http://localhost:3000"
                - "https://community.example.com"
              methods:
                - GET
                - POST
                - PUT
                - DELETE
                - OPTIONS
              headers:
                - Accept
                - Accept-Version
                - Content-Length
                - Content-MD5
                - Content-Type
                - Date
                - X-Auth-Token
              credentials: true
      
      - name: user-service
        url: http://user-service:3002
        routes:
          - name: user-routes
            paths:
              - /api/users
            methods:
              - GET
              - POST
              - PUT
              - DELETE
            strip_path: true
        plugins:
          - name: jwt
            config:
              secret_is_base64: false
              key_claim_name: iss
              uri_param_names:
                - jwt
              claims_to_verify:
                - exp
          - name: rate-limiting
            config:
              minute: 200
              hour: 2000
      
      - name: content-service
        url: http://content-service:3003
        routes:
          - name: content-routes
            paths:
              - /api/posts
              - /api/comments
            methods:
              - GET
              - POST
              - PUT
              - DELETE
            strip_path: true
        plugins:
          - name: jwt
            config:
              secret_is_base64: false
              key_claim_name: iss
              uri_param_names:
                - jwt
              claims_to_verify:
                - exp
          - name: rate-limiting
            config:
              minute: 300
              hour: 3000
      
      - name: notification-service
        url: http://notification-service:3004
        routes:
          - name: notification-routes
            paths:
              - /api/notifications
            methods:
              - GET
              - POST
              - PUT
              - DELETE
            strip_path: true
        plugins:
          - name: jwt
            config:
              secret_is_base64: false
              key_claim_name: iss
              uri_param_names:
                - jwt
              claims_to_verify:
                - exp
          - name: rate-limiting
            config:
              minute: 100
              hour: 1000
      
      - name: analytics-service
        url: http://analytics-service:3005
        routes:
          - name: analytics-routes
            paths:
              - /api/analytics
            methods:
              - GET
              - POST
            strip_path: true
        plugins:
          - name: jwt
            config:
              secret_is_base64: false
              key_claim_name: iss
              uri_param_names:
                - jwt
              claims_to_verify:
                - exp
          - name: rate-limiting
            config:
              minute: 50
              hour: 500
      
      - name: search-service
        url: http://search-service:3006
        routes:
          - name: search-routes
            paths:
              - /api/search
            methods:
              - GET
              - POST
            strip_path: true
        plugins:
          - name: jwt
            config:
              secret_is_base64: false
              key_claim_name: iss
              uri_param_names:
                - jwt
              claims_to_verify:
                - exp
          - name: rate-limiting
            config:
              minute: 100
              hour: 1000
      
      - name: file-service
        url: http://file-service:3007
        routes:
          - name: file-routes
            paths:
              - /api/files
            methods:
              - GET
              - POST
              - PUT
              - DELETE
            strip_path: true
        plugins:
          - name: jwt
            config:
              secret_is_base64: false
              key_claim_name: iss
              uri_param_names:
                - jwt
              claims_to_verify:
                - exp
          - name: rate-limiting
            config:
              minute: 200
              hour: 2000
      
      - name: chat-service
        url: http://chat-service:3008
        routes:
          - name: chat-routes
            paths:
              - /api/chat
            methods:
              - GET
              - POST
              - PUT
              - DELETE
            strip_path: true
        plugins:
          - name: jwt
            config:
              secret_is_base64: false
              key_claim_name: iss
              uri_param_names:
                - jwt
              claims_to_verify:
                - exp
          - name: rate-limiting
            config:
              minute: 500
              hour: 5000
      
      - name: admin-service
        url: http://admin-service:3009
        routes:
          - name: admin-routes
            paths:
              - /api/admin
            methods:
              - GET
              - POST
              - PUT
              - DELETE
            strip_path: true
        plugins:
          - name: jwt
            config:
              secret_is_base64: false
              key_claim_name: iss
              uri_param_names:
                - jwt
              claims_to_verify:
                - exp
          - name: rate-limiting
            config:
              minute: 50
              hour: 500
    
    plugins:
      - name: prometheus
        config:
          per_consumer: true
          status_code_metrics: true
          latency_metrics: true
          bandwidth_metrics: true
          upstream_health_metrics: true
      
      - name: request-transformer
        config:
          add:
            headers:
              - "X-Request-ID:${request_id}"
              - "X-Forwarded-For:${client_ip}"
      
      - name: response-transformer
        config:
          add:
            headers:
              - "X-Response-Time:${latency}"
              - "X-Service-Version:${service_version}"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: community-platform
  labels:
    app.kubernetes.io/name: community-platform
    app.kubernetes.io/component: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "rules/*.yml"
    
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      
      - job_name: 'api-gateway'
        static_configs:
          - targets: ['api-gateway:8001']
        metrics_path: '/metrics'
        scrape_interval: 10s
      
      - job_name: 'auth-service'
        static_configs:
          - targets: ['auth-service:3001']
        metrics_path: '/metrics'
        scrape_interval: 10s
      
      - job_name: 'user-service'
        static_configs:
          - targets: ['user-service:3002']
        metrics_path: '/metrics'
        scrape_interval: 10s
      
      - job_name: 'content-service'
        static_configs:
          - targets: ['content-service:3003']
        metrics_path: '/metrics'
        scrape_interval: 10s
      
      - job_name: 'notification-service'
        static_configs:
          - targets: ['notification-service:3004']
        metrics_path: '/metrics'
        scrape_interval: 10s
      
      - job_name: 'analytics-service'
        static_configs:
          - targets: ['analytics-service:3005']
        metrics_path: '/metrics'
        scrape_interval: 10s
      
      - job_name: 'search-service'
        static_configs:
          - targets: ['search-service:3006']
        metrics_path: '/metrics'
        scrape_interval: 10s
      
      - job_name: 'file-service'
        static_configs:
          - targets: ['file-service:3007']
        metrics_path: '/metrics'
        scrape_interval: 10s
      
      - job_name: 'chat-service'
        static_configs:
          - targets: ['chat-service:3008']
        metrics_path: '/metrics'
        scrape_interval: 10s
      
      - job_name: 'admin-service'
        static_configs:
          - targets: ['admin-service:3009']
        metrics_path: '/metrics'
        scrape_interval: 10s
      
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: community-platform
  labels:
    app.kubernetes.io/name: community-platform
    app.kubernetes.io/component: monitoring
data:
  datasources.yaml: |
    apiVersion: 1
    
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus-service:9090
        isDefault: true
        editable: true
      
      - name: Jaeger
        type: jaeger
        access: proxy
        url: http://jaeger-service:16686
        editable: true
      
      - name: Loki
        type: loki
        access: proxy
        url: http://loki-service:3100
        editable: true
