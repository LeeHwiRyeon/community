# Community Platform Production Environment Configuration

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
NODE_ENV=production
PORT=3000
API_VERSION=v2.0.0

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL (Primary Database)
POSTGRES_HOST=postgres-prod.example.com
POSTGRES_PORT=5432
POSTGRES_DB=community_production
POSTGRES_USER=community_user
POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
POSTGRES_SSL=true
POSTGRES_POOL_MIN=5
POSTGRES_POOL_MAX=20
POSTGRES_TIMEOUT=30000

# MongoDB (User Data)
MONGODB_URI=mongodb://community_user:${MONGODB_PASSWORD}@mongo-prod.example.com:27017/community_users?ssl=true&authSource=admin
MONGODB_OPTIONS={"useNewUrlParser":true,"useUnifiedTopology":true,"ssl":true}

# Redis (Cache & Sessions)
REDIS_HOST=redis-prod.example.com
REDIS_PORT=6379
REDIS_PASSWORD=${REDIS_PASSWORD}
REDIS_DB=0
REDIS_TTL=3600

# =============================================================================
# SEARCH & ANALYTICS
# =============================================================================
# Elasticsearch
ELASTICSEARCH_URL=https://elasticsearch-prod.example.com:9200
ELASTICSEARCH_USERNAME=elastic
ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
ELASTICSEARCH_SSL=true

# ClickHouse
CLICKHOUSE_URL=https://clickhouse-prod.example.com:8443
CLICKHOUSE_USERNAME=default
CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
CLICKHOUSE_DATABASE=community_analytics

# =============================================================================
# FILE STORAGE
# =============================================================================
# AWS S3
AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
AWS_REGION=us-west-2
AWS_S3_BUCKET=community-platform-prod
AWS_S3_ENDPOINT=https://s3.us-west-2.amazonaws.com

# CDN
CDN_URL=https://cdn.community.example.com
CDN_CACHE_TTL=31536000

# =============================================================================
# MESSAGING & QUEUES
# =============================================================================
# Apache Kafka
KAFKA_BROKERS=kafka-prod-1.example.com:9092,kafka-prod-2.example.com:9092,kafka-prod-3.example.com:9092
KAFKA_CLIENT_ID=community-platform-prod
KAFKA_GROUP_ID=community-platform-group
KAFKA_SSL=true
KAFKA_SASL_MECHANISM=PLAIN
KAFKA_SASL_USERNAME=${KAFKA_USERNAME}
KAFKA_SASL_PASSWORD=${KAFKA_PASSWORD}

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================
# JWT
JWT_SECRET=${JWT_SECRET}
JWT_EXPIRES_IN=24h
JWT_REFRESH_EXPIRES_IN=7d
JWT_ISSUER=community.example.com
JWT_AUDIENCE=community-api

# OAuth 2.0
GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}

# 2FA
TOTP_ISSUER=Community Platform
TOTP_ALGORITHM=SHA1
TOTP_DIGITS=6
TOTP_PERIOD=30

# Password Hashing
BCRYPT_ROUNDS=12
PASSWORD_MIN_LENGTH=8
PASSWORD_REQUIRE_UPPERCASE=true
PASSWORD_REQUIRE_LOWERCASE=true
PASSWORD_REQUIRE_NUMBERS=true
PASSWORD_REQUIRE_SYMBOLS=true

# =============================================================================
# NOTIFICATIONS
# =============================================================================
# Email (SendGrid)
SENDGRID_API_KEY=${SENDGRID_API_KEY}
SENDGRID_FROM_EMAIL=noreply@community.example.com
SENDGRID_FROM_NAME=Community Platform
SENDGRID_TEMPLATE_WELCOME=d-welcome-template-id
SENDGRID_TEMPLATE_RESET=d-reset-template-id
SENDGRID_TEMPLATE_NOTIFICATION=d-notification-template-id

# SMS (Twilio)
TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
TWILIO_PHONE_NUMBER=+1234567890

# Push Notifications (Firebase)
FIREBASE_PROJECT_ID=community-platform-prod
FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
FIREBASE_CLIENT_EMAIL=firebase-adminsdk@community-platform-prod.iam.gserviceaccount.com

# Slack
SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
SLACK_CHANNEL=#community-alerts

# Discord
DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
DISCORD_CHANNEL_ID=123456789012345678

# =============================================================================
# MONITORING & LOGGING
# =============================================================================
# Prometheus
PROMETHEUS_ENDPOINT=https://prometheus-prod.example.com:9090
PROMETHEUS_USERNAME=prometheus
PROMETHEUS_PASSWORD=${PROMETHEUS_PASSWORD}

# Grafana
GRAFANA_URL=https://grafana-prod.example.com:3000
GRAFANA_USERNAME=admin
GRAFANA_PASSWORD=${GRAFANA_PASSWORD}

# Jaeger
JAEGER_ENDPOINT=https://jaeger-prod.example.com:14268
JAEGER_SERVICE_NAME=community-platform
JAEGER_SAMPLING_RATE=0.1

# ELK Stack
ELASTICSEARCH_LOGS_URL=https://elasticsearch-logs-prod.example.com:9200
LOGSTASH_ENDPOINT=https://logstash-prod.example.com:5044
KIBANA_URL=https://kibana-prod.example.com:5601

# Sentry
SENTRY_DSN=${SENTRY_DSN}
SENTRY_ENVIRONMENT=production
SENTRY_RELEASE=${GIT_COMMIT_SHA}

# DataDog
DATADOG_API_KEY=${DATADOG_API_KEY}
DATADOG_APP_KEY=${DATADOG_APP_KEY}
DATADOG_SITE=datadoghq.com

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================
# Payment (Stripe)
STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}

# Maps (Google Maps)
GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}

# AI Services (OpenAI)
OPENAI_API_KEY=${OPENAI_API_KEY}
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=1000

# =============================================================================
# RATE LIMITING & SECURITY
# =============================================================================
# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_SKIP_SUCCESSFUL_REQUESTS=false
RATE_LIMIT_SKIP_FAILED_REQUESTS=false

# CORS
CORS_ORIGIN=https://community.example.com,https://admin.community.example.com
CORS_CREDENTIALS=true
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_HEADERS=Content-Type,Authorization,X-Requested-With

# Security Headers
HELMET_ENABLED=true
HELMET_CONTENT_SECURITY_POLICY=true
HELMET_HSTS_MAX_AGE=31536000
HELMET_HSTS_INCLUDE_SUBDOMAINS=true

# =============================================================================
# PERFORMANCE & CACHING
# =============================================================================
# Redis Cache
CACHE_TTL=3600
CACHE_PREFIX=community:
CACHE_COMPRESSION=true

# CDN
CDN_CACHE_CONTROL=max-age=31536000
CDN_ETAG=true
CDN_GZIP=true

# Database Connection Pooling
DB_POOL_MIN=5
DB_POOL_MAX=20
DB_POOL_ACQUIRE_TIMEOUT=60000
DB_POOL_IDLE_TIMEOUT=300000

# =============================================================================
# FEATURE FLAGS
# =============================================================================
FEATURE_DARK_MODE=true
FEATURE_REAL_TIME_CHAT=true
FEATURE_VIDEO_CALLS=true
FEATURE_AI_RECOMMENDATIONS=true
FEATURE_GAMIFICATION=true
FEATURE_MOBILE_APP=true
FEATURE_ANALYTICS_DASHBOARD=true
FEATURE_ADVANCED_SEARCH=true

# =============================================================================
# BACKUP & DISASTER RECOVERY
# =============================================================================
# Database Backup
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=community-backups-prod
BACKUP_ENCRYPTION_KEY=${BACKUP_ENCRYPTION_KEY}

# Disaster Recovery
DR_ENABLED=true
DR_PRIMARY_REGION=us-west-2
DR_SECONDARY_REGION=us-east-1
DR_FAILOVER_THRESHOLD=5
DR_RECOVERY_TIME_OBJECTIVE=300

# =============================================================================
# COMPLIANCE & AUDIT
# =============================================================================
# GDPR Compliance
GDPR_ENABLED=true
GDPR_DATA_RETENTION_DAYS=2555
GDPR_RIGHT_TO_BE_FORGOTTEN=true
GDPR_DATA_PORTABILITY=true

# Audit Logging
AUDIT_LOG_ENABLED=true
AUDIT_LOG_LEVEL=info
AUDIT_LOG_RETENTION_DAYS=2555
AUDIT_LOG_ENCRYPTION=true

# =============================================================================
# DEVELOPMENT & DEBUGGING
# =============================================================================
# Debug Mode (DISABLE IN PRODUCTION)
DEBUG=false
VERBOSE_LOGGING=false
SQL_LOGGING=false
API_DOCS_ENABLED=false

# Health Checks
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30000
HEALTH_CHECK_TIMEOUT=5000
HEALTH_CHECK_RETRIES=3

# =============================================================================
# KUBERNETES & CONTAINER
# =============================================================================
# Kubernetes
KUBERNETES_NAMESPACE=community-platform
KUBERNETES_CLUSTER=production
KUBERNETES_NODE_SELECTOR=node-type=production

# Container
CONTAINER_IMAGE_TAG=${GIT_COMMIT_SHA}
CONTAINER_REGISTRY=registry.example.com
CONTAINER_PULL_POLICY=Always

# =============================================================================
# LOAD BALANCING & CDN
# =============================================================================
# Load Balancer
LOAD_BALANCER_ALGORITHM=round_robin
LOAD_BALANCER_HEALTH_CHECK_PATH=/health
LOAD_BALANCER_HEALTH_CHECK_INTERVAL=30
LOAD_BALANCER_HEALTH_CHECK_TIMEOUT=5
LOAD_BALANCER_HEALTH_CHECK_THRESHOLD=2

# CDN
CDN_PROVIDER=cloudflare
CDN_CACHE_LEVEL=aggressive
CDN_BROWSER_CACHE_TTL=31536000
CDN_EDGE_CACHE_TTL=31536000

# =============================================================================
# SSL/TLS
# =============================================================================
# SSL Configuration
SSL_ENABLED=true
SSL_CERT_PATH=/etc/ssl/certs/community.example.com.crt
SSL_KEY_PATH=/etc/ssl/private/community.example.com.key
SSL_CA_PATH=/etc/ssl/certs/ca-bundle.crt
SSL_PROTOCOLS=TLSv1.2,TLSv1.3
SSL_CIPHERS=ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256

# =============================================================================
# API GATEWAY
# =============================================================================
# Kong Gateway
KONG_ADMIN_URL=https://kong-prod.example.com:8001
KONG_PROXY_URL=https://api.community.example.com
KONG_DATABASE=kong
KONG_DATABASE_HOST=postgres-prod.example.com
KONG_DATABASE_PORT=5432
KONG_DATABASE_USER=kong
KONG_DATABASE_PASSWORD=${KONG_DATABASE_PASSWORD}

# =============================================================================
# MICROSERVICES
# =============================================================================
# Service URLs
AUTH_SERVICE_URL=https://auth.community.example.com
USER_SERVICE_URL=https://user.community.example.com
CONTENT_SERVICE_URL=https://content.community.example.com
NOTIFICATION_SERVICE_URL=https://notification.community.example.com
ANALYTICS_SERVICE_URL=https://analytics.community.example.com
SEARCH_SERVICE_URL=https://search.community.example.com
FILE_SERVICE_URL=https://file.community.example.com
CHAT_SERVICE_URL=https://chat.community.example.com
ADMIN_SERVICE_URL=https://admin.community.example.com

# Service Discovery
SERVICE_DISCOVERY_ENABLED=true
SERVICE_DISCOVERY_PROVIDER=consul
SERVICE_DISCOVERY_HOST=consul-prod.example.com
SERVICE_DISCOVERY_PORT=8500

# =============================================================================
# MESSAGE QUEUES
# =============================================================================
# RabbitMQ
RABBITMQ_URL=amqps://community_user:${RABBITMQ_PASSWORD}@rabbitmq-prod.example.com:5671
RABBITMQ_QUEUE_PREFIX=community
RABBITMQ_EXCHANGE=community.exchange
RABBITMQ_ROUTING_KEY=community.routing

# =============================================================================
# TESTING & QUALITY ASSURANCE
# =============================================================================
# Test Configuration
TEST_ENABLED=false
TEST_DATABASE_URL=postgresql://test_user:test_password@test-postgres:5432/community_test
TEST_REDIS_URL=redis://test-redis:6379
TEST_TIMEOUT=30000

# Code Quality
ESLINT_ENABLED=true
PRETTIER_ENABLED=true
SONARQUBE_ENABLED=true
SONARQUBE_URL=https://sonar.example.com
SONARQUBE_TOKEN=${SONARQUBE_TOKEN}

# =============================================================================
# DEPLOYMENT
# =============================================================================
# Git
GIT_REPOSITORY=https://github.com/your-org/community-platform
GIT_BRANCH=main
GIT_COMMIT_SHA=${GIT_COMMIT_SHA}
GIT_TAG=${GIT_TAG}

# Docker
DOCKER_REGISTRY=registry.example.com
DOCKER_NAMESPACE=community-platform
DOCKER_IMAGE_TAG=${GIT_COMMIT_SHA}

# Kubernetes
KUBERNETES_CONTEXT=production
KUBERNETES_NAMESPACE=community-platform
KUBERNETES_CONFIG_PATH=/etc/kubernetes/kubeconfig

# Helm
HELM_CHART_PATH=./helm/community-platform
HELM_RELEASE_NAME=community-platform
HELM_NAMESPACE=community-platform
HELM_VALUES_FILE=./helm/values/production.yaml

# =============================================================================
# SECRETS (DO NOT COMMIT)
# =============================================================================
# These should be stored in a secure secret management system
# like HashiCorp Vault, AWS Secrets Manager, or Kubernetes Secrets

# Database Passwords
POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
MONGODB_PASSWORD=${MONGODB_PASSWORD}
REDIS_PASSWORD=${REDIS_PASSWORD}

# API Keys
JWT_SECRET=${JWT_SECRET}
SENDGRID_API_KEY=${SENDGRID_API_KEY}
STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
OPENAI_API_KEY=${OPENAI_API_KEY}

# Service Passwords
KAFKA_PASSWORD=${KAFKA_PASSWORD}
ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
PROMETHEUS_PASSWORD=${PROMETHEUS_PASSWORD}
GRAFANA_PASSWORD=${GRAFANA_PASSWORD}
KONG_DATABASE_PASSWORD=${KONG_DATABASE_PASSWORD}

# External Service Credentials
GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}

# Monitoring & Logging
SENTRY_DSN=${SENTRY_DSN}
DATADOG_API_KEY=${DATADOG_API_KEY}
DATADOG_APP_KEY=${DATADOG_APP_KEY}

# Backup & Security
BACKUP_ENCRYPTION_KEY=${BACKUP_ENCRYPTION_KEY}
SONARQUBE_TOKEN=${SONARQUBE_TOKEN}
